install.pacakes("swirl")
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y = x-3
y <- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
(z, 555, z)
d(z, 555, z)
z
c(z, 555, z)
z*2+100
my_sqrt < - sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- abs(z/my_sqrt)
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
rnorm
?rnorm
arg(rnorm)
args(rnorm)
quit()
a <- available_packages()
a <- available.packages()
head(rownames(a), 3)
install.packages("KernSmooth")
library(kernSmooth)
library(KernSmooth)
quit()
getpw()
getwd()
dir()
x <- 5
x
print(x)
msg <- "Hello World"
msg
print (msg)
x <1:20
x
x <- 1:20
x
x <- 0:6
x
class(x)
as.numeric(c)
as.numeric(x)
as.logical(x)
as.character(x)
class(as.character(x))
x <- c("a", "b", "c")
class(x)
as.numeric(x)
as.logical(x)
as.complex(x)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
x <- list(1, "a" , TRUE, 1+4i)
x
mydata <- rnorm(100)
mydate
mydata
sd(mydata)
args(lm)
agrs(sd)
args(sd)
ash <- function(a,b) {}
print(a)
ash <- function(a,b) {
print(a)
print(b)
}
ash(2,3)
ash(2)
args(paste)
args(at)
args(cat)
?lm
search()
make.power <- function(n) {}
make.power <- function(n) {}
make.power <- function(n) {}
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
sqaure(3)
square(3)
environment(cube)
ls(environment(cube))
get("n", (environment(cube))
)
get("n", (environment(square)))
ls(environment(square))
args(square)
y <- 10
f<- function(x) {
y <- 2
y^2+g(x)
}
g<- function(x) {
x*y
}
f(3)
?strptime
?as
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
x
if (x>5){ print (x)}
if (x>5){
x <- 0
}
f <- function(x) {
g <- function(y) {
y+z}
z <- 4
x+g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x<3) {
NA
}
else {
y <- if(x<3) {
NA
} else {}
} else {
y <- if(x<3) {
NA
} else { 10}
y
getwd()
library(knitr
)
setwd("C:\Users\KumarAsn1\RepData_PeerAssessment1")
setwd("C:/Users/KumarAsn1/RepData_PeerAssessment1")
list.files()
knit2html("PA1_template.Rmd")
browseURL("PA1_template.html")
quit()
